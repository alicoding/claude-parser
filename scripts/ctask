#!/bin/bash
# ctask - Claude Task wrapper for dstask
# Ensures all tasks are Claude-ready with full context
#
# Usage: ctask add "description"  # Creates enforced task
#        ctask start <id>         # Validates before starting
#        ctask <any other>        # Passes through to dstask

set -e

CLAUDE_PARSER_DIR="/Volumes/AliDev/ai-projects/claude-parser"
PYTHON="python"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# If 'add' command, use enforced creation
if [ "$1" = "add" ]; then
    shift  # Remove 'add'
    echo -e "${YELLOW}ü§ñ Creating Claude-ready task with full context...${NC}"
    
    # Run the enforced task creation
    $PYTHON "$CLAUDE_PARSER_DIR/scripts/create_enforced_task.py" "$@"
    exit $?
fi

# If 'start' command, validate task first
if [ "$1" = "start" ]; then
    TASK_ID=$2
    
    echo -e "${YELLOW}üîç Validating task $TASK_ID before starting...${NC}"
    
    # Check if task has required context
    NOTES=$(dstask $TASK_ID note)
    
    ERRORS=()
    
    # Check for required sections
    if ! echo "$NOTES" | grep -q "RESEARCH:"; then
        ERRORS+=("Missing RESEARCH section")
    fi
    
    if ! echo "$NOTES" | grep -q "DUPLICATES:"; then
        ERRORS+=("Missing DUPLICATES check")
    fi
    
    if ! echo "$NOTES" | grep -q "COMPLEXITY:"; then
        ERRORS+=("Missing COMPLEXITY analysis")
    fi
    
    if ! echo "$NOTES" | grep -q "SUCCESS CRITERIA:"; then
        ERRORS+=("Missing SUCCESS CRITERIA")
    fi
    
    # If errors, don't allow start
    if [ ${#ERRORS[@]} -gt 0 ]; then
        echo -e "${RED}‚ùå Task $TASK_ID is not Claude-ready:${NC}"
        for error in "${ERRORS[@]}"; do
            echo -e "${RED}  - $error${NC}"
        done
        echo ""
        echo -e "${YELLOW}Fix with:${NC}"
        echo "  1. python scripts/research.py 'task description'"
        echo "  2. grep -r 'similar_code' claude_parser/"
        echo "  3. radon cc affected_files.py"
        echo "  4. dstask $TASK_ID note"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Task $TASK_ID is Claude-ready!${NC}"
fi

# Pass through to regular dstask
exec dstask "$@"